---
import BaseLayout from '../layouts/BaseLayout.astro';
import { readFile } from 'fs/promises';
import { join } from 'path';
import { marked } from 'marked';

// Helper function to generate slug from text
function slugify(text: string): string {
  if (!text) return '';
  return text
    .toLowerCase()
    .replace(/[^\w\s-]/g, '')
    .replace(/\s+/g, '-')
    .replace(/--+/g, '-')
    .trim();
}

// Configure marked with custom renderer for heading IDs
const renderer = new marked.Renderer();
renderer.heading = function({ text, depth }: any) {
  const slug = slugify(text);
  return `<h${depth} id="${slug}">${text}</h${depth}>\n`;
};

marked.use({ renderer });

// Read the main documentation
const docPath = join(process.cwd(), '../maenifold-docs/README.md');
const content = await readFile(docPath, 'utf-8');

// Remove the TOC section from content (everything between "üìç Table of Contents" and "## 1.")
const contentWithoutTOC = content.replace(/## üìç Table of Contents[\s\S]*?(?=## 1\.)/m, '');
const html = marked(contentWithoutTOC);

// Extract TOC structure
const tocItems = [
  { title: 'Core Understanding', items: [
    { id: '1-beyond-rag-real-reasoning', text: '1. Beyond RAG: Real Reasoning' },
    { id: '2-how-it-works', text: '2. How It Works', subitems: [
      { id: '21-sequential-thinking', text: '2.1 Sequential Thinking' },
      { id: '22-orchestrated-workflows', text: '2.2 Orchestrated Workflows' },
      { id: '23-hybrid-rrf-search', text: '2.3 Hybrid RRF Search' },
      { id: '24-lazy-graph-construction', text: '2.4 Lazy Graph Construction' }
    ]}
  ]},
  { title: 'Getting Started', items: [
    { id: '3-quick-start', text: '3. Quick Start', subitems: [
      { id: '31-for-vscode-users', text: '3.1 For VSCode Users' },
      { id: '32-for-developers', text: '3.2 For Developers' }
    ]}
  ]},
  { title: 'Architecture', items: [
    { id: '4-the-cognitive-stack', text: '4. The Cognitive Stack', subitems: [
      { id: '41-memory-layer', text: '4.1 Memory Layer' },
      { id: '42-graph-layer', text: '4.2 Graph Layer' },
      { id: '43-reasoning-layer', text: '4.3 Reasoning Layer' }
    ]},
    { id: '5-key-capabilities', text: '5. Key Capabilities' },
    { id: '6-technical-specifications', text: '6. Technical Specifications' }
  ]},
  { title: 'Real-World Usage', items: [
    { id: '7-example-usage', text: '7. Example Usage', subitems: [
      { id: '71-the-pm-protocol', text: '7.1 The PM Protocol' },
      { id: '72-complex-problem-solving', text: '7.2 Complex Problem Solving' },
      { id: '73-multi-agent-development', text: '7.3 Multi-Agent Development' },
      { id: '74-knowledge-graph-queries', text: '7.4 Knowledge Graph Queries' },
      { id: '75-observing-ai-cognition', text: '7.5 Observing AI Cognition' }
    ]},
    { id: '8-real-world-impact', text: '8. Real-World Impact', subitems: [
      { id: '81-what-this-enables', text: '8.1 What This Enables' },
      { id: '82-the-compound-effect', text: '8.2 The Compound Effect' }
    ]}
  ]},
  { title: 'Testing', items: [
    { id: '9-real-testing-real-bugs-real-confidence', text: '9. Real Testing', subitems: [
      { id: '91-the-hero-demo', text: '9.1 The Hero Demo' },
      { id: '92-why-this-matters', text: '9.2 Why This Matters' },
      { id: '93-adaptive-test-evolution', text: '9.3 Adaptive Test Evolution' },
      { id: '94-test-philosophy', text: '9.4 Test Philosophy' }
    ]}
  ]},
  { title: 'Reference', items: [
    { id: '10-technical-principles', text: '10. Technical Principles' },
    { id: '11-project-structure', text: '11. Project Structure' },
    { id: '12-documentation', text: '12. Documentation' },
    { id: '13-license--attribution', text: '13. License & Attribution' }
  ]}
];
---

<BaseLayout title="Documentation - maenifold">
  <div class="flex max-w-screen-2xl mx-auto">
    <!-- Left Sidebar TOC -->
    <aside class="hidden lg:block w-64 flex-shrink-0 sticky top-0 h-screen overflow-y-auto border-r border-gray-200 dark:border-gray-800 py-8 px-4">
      <nav class="space-y-6">
        {tocItems.map(section => (
          <div>
            <h3 class="text-xs font-semibold text-gray-900 dark:text-gray-100 uppercase tracking-wider mb-2">
              {section.title}
            </h3>
            <ul class="space-y-1">
              {section.items.map(item => (
                <li>
                  <a href={`#${item.id}`} class="block text-sm text-gray-600 dark:text-gray-400 hover:text-primary dark:hover:text-primary-light py-1">
                    {item.text}
                  </a>
                  {item.subitems && (
                    <ul class="ml-3 mt-1 space-y-1">
                      {item.subitems.map(subitem => (
                        <li>
                          <a href={`#${subitem.id}`} class="block text-sm text-gray-500 dark:text-gray-500 hover:text-primary dark:hover:text-primary-light py-1">
                            {subitem.text}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              ))}
            </ul>
          </div>
        ))}
      </nav>
    </aside>

    <!-- Main Content -->
    <main class="flex-1 px-4 sm:px-6 lg:px-8 py-12 overflow-x-hidden">
      <article class="prose prose-lg dark:prose-invert max-w-4xl">
        <Fragment set:html={html} />
      </article>
    </main>
  </div>
</BaseLayout>
